// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using koninkrijk.Server.Data;

#nullable disable

namespace koninkrijk.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240715191901_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("koninkrijk.Server.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("koninkrijk.Server.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastCaptureTry")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("koninkrijk.Server.Models.PlayerProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentFeedback")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentWord")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastCaptureTry")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tries")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("PlayerProvince");
                });

            modelBuilder.Entity("koninkrijk.Server.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentPlayer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastCapture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinceSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The province of Groningen",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Groningen",
                            ProvinceSize = 4
                        },
                        new
                        {
                            Id = 2,
                            Description = "The province of Fryslân",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fryslân",
                            ProvinceSize = 5
                        },
                        new
                        {
                            Id = 3,
                            Description = "The province of Drenthe",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drenthe",
                            ProvinceSize = 4
                        },
                        new
                        {
                            Id = 4,
                            Description = "The province of Overijssel",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Overijssel",
                            ProvinceSize = 6
                        },
                        new
                        {
                            Id = 5,
                            Description = "The province of Flevoland",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Flevoland",
                            ProvinceSize = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "The province of Gelderland",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gelderland",
                            ProvinceSize = 9
                        },
                        new
                        {
                            Id = 7,
                            Description = "The province of Utrecht",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Utrecht",
                            ProvinceSize = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "The province of Noord-Holland",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Noord-Holland",
                            ProvinceSize = 6
                        },
                        new
                        {
                            Id = 9,
                            Description = "The province of Zuid-Holland",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zuid-Holland",
                            ProvinceSize = 7
                        },
                        new
                        {
                            Id = 10,
                            Description = "The province of Zeeland",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Zeeland",
                            ProvinceSize = 3
                        },
                        new
                        {
                            Id = 11,
                            Description = "The province of Noord-Brabant",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Noord-Brabant",
                            ProvinceSize = 8
                        },
                        new
                        {
                            Id = 12,
                            Description = "The province of Limburg",
                            LastCapture = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Limburg",
                            ProvinceSize = 5
                        });
                });

            modelBuilder.Entity("koninkrijk.Server.Models.Player", b =>
                {
                    b.HasOne("koninkrijk.Server.Models.Province", "Province")
                        .WithOne("Player")
                        .HasForeignKey("koninkrijk.Server.Models.Player", "ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("koninkrijk.Server.Models.PlayerProvince", b =>
                {
                    b.HasOne("koninkrijk.Server.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("koninkrijk.Server.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("koninkrijk.Server.Models.Province", b =>
                {
                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
